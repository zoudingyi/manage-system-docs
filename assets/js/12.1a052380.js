(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{284:function(t,a,s){"use strict";s.r(a);var e=s(14),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"登录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#登录"}},[t._v("#")]),t._v(" 登录")]),t._v(" "),a("p",[t._v("在开发初期，我们通常会直接进行页面开发。如果你正准备开始联调，可向后端询问本地 ip 地址或者是已经有了线上的地址后，先登录一遍获取 token 并保存到我们本地再进行联调。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("登录流程在开发初期没有太大的意义，获取的用户信息有用的仅仅是名字和用户的权限 id，但权限往往在项目后期才会配置好，所以初期可以直接略过该流程。")])]),t._v(" "),a("h2",{attrs:{id:"开发登录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发登录"}},[t._v("#")]),t._v(" 开发登录")]),t._v(" "),a("p",[t._v("打开线上地址登录 oauth2 后获取 token。本地调试的时候在根目录新建 .env.development.local 文件，复制下面的代码进去，并把获取到的 token 填到 VITE_APP_TOKEN 里即可。")]),t._v(" "),a("div",{staticClass:"language-javaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("# your key\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VITE_APP_TOKEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n")])])]),a("p",[a("strong",[t._v("如果当前 cookie 里存了过期的 token 需要先清空才会生效。")])]),t._v(" "),a("h2",{attrs:{id:"线上登录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线上登录"}},[t._v("#")]),t._v(" 线上登录")]),t._v(" "),a("p",[t._v("线上登录会通过跳转 oauth2 页面自动获取 token，不需要做任何改动。")])])}),[],!1,null,null,null);a.default=r.exports}}]);